@page "/lenguajeList"
@using Microsoft.AspNetCore.SignalR.Client

@inject NavigationManager navigationManager;
@inject HttpClient HttpClient;


<h2>Lenguaje link details</h2>

<p>
	<a href="AddLenguage" class="btn btn-primary">Create new lenguage</a>
</p>


@if (LenguagesList == null)
{
	<p>Loading..</p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Name</th>
				<th>WebSite</th>
				<th>Extensions</th>
				<th>  </th>
			</tr>
		</thead>
		<tbody>
			@foreach (var lenguage in LenguagesList)
			{
				<tr>
					<td>@lenguage.Name</td>
					<td>@lenguage.WebSite</td>
					<td>@lenguage.Extensions</td>
					<td><button @onclick="()=> EditLenguage(lenguage.Id)">Edit</button></td>
				</tr>
			}
		</tbody>
	</table>
}


@code {
	public List<ProgrammingLanguage> LenguagesList { get; set; }
	private HubConnection hubConnection;


	protected override async Task OnInitializedAsync()
	{
		hubConnection = new HubConnectionBuilder().WithUrl(navigationManager.ToAbsoluteUri("/lenguajesHub")).Build();

		hubConnection.On("receiveMessage",  ()=>
		{
			CallGetAllLenguage();
			StateHasChanged();
		});

		await hubConnection.StartAsync();
		await GetAllLanguages();
	}

	public void CallGetAllLenguage()
	{
		Task.Run(async () => await GetAllLanguages());
	}

	protected async Task GetAllLanguages()
	{
		LenguagesList = await HttpClient.GetFromJsonAsync<List<ProgrammingLanguage>>("api/programmingLanguages");
		StateHasChanged();
	}

	public void Dispose()
	{
		_ = hubConnection.DisposeAsync();
	}

	public void EditLenguage(int Id) => navigationManager.NavigateTo($"/EditLenguage/{Id}");
}
